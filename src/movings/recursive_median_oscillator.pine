//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Recursive Median Filter indicator script may be freely distributed under the MIT license.
study("Recursive Median Filter", shorttitle="RMF", overlay=true)

medianLength = input(title="Length", type=integer, defval=5, minval=1)
lowpassLength = input(title="Lowpass Length", type=integer, defval=12, minval=1)
src = input(title="Source", type=source, defval=close)

sort(src, i) =>
	min = -10000.0

	for j = 0 to i - 1
		min_local = 10000.0

		for l = 0 to medianLength - 1
			if (nz(src[l]) <= min)
				continue

			min_local := min(min_local, max(min, nz(src[l])))

		if min_local != 10000
			min := min_local
	min

median(src, length) =>
	result = 0.0

	if length % 2 == 0
		result := (sort(src, length / 2) + sort(src, length / 2 + 1)) / 2
	else
		result := sort(src, ceil(length / 2))

PI = 2 * asin(1)

alphaArg = 2 * PI / lowpassLength

alpha = 0.0
alpha := cos(alphaArg) != 0 ? (cos(alphaArg) + sin(alphaArg) - 1) / cos(alphaArg) : nz(alpha[1])

rmf = 0.0
rmf := alpha * median(src, medianLength) + (1 - alpha) * nz(rmf[1])

plot(rmf, title="RMF", linewidth=2, color=#6d1e7f, transp=0)
