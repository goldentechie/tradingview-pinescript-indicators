//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Ehlers Fisherized Deviation-Scaled Oscillator script may be freely distributed under the MIT license.
study("Ehlers Fisherized Deviation-Scaled Oscillator", shorttitle="EFDSO")

length = input(title="Length", type=integer, minval=1, defval=40)
ssfLength = input(title="Super Smoother Filter Length", type=integer, minval=1, defval=20)
numberOfPoles = input(title="Number of Poles", type=integer, defval=2, options=[2, 3])
stdevInput = input(title="Standard Deviation", defval="Sample", options=["Population", "Sample"])
overboughtLevel = input(title="Overbought Level", type=float, step=0.1, defval=2)
oversoldLevel = input(title="Oversold Level", type=float, step=0.1, defval=-2)
src = input(title="Source", type=source, defval=close)

PI = 2 * asin(1)

twoPoleSuperSmootherFilter(src, length) =>
	arg = sqrt(2) * PI / length
	a1 = exp(-arg)
	b1 = 2 * a1 * cos(arg)
	c2 = b1
	c3 = -pow(a1, 2)
	c1 = 1 - c2 - c3

	ssf = 0.0
	ssf := c1 * src + c2 * nz(ssf[1]) + c3 * nz(ssf[2])

threePoleSuperSmootherFilter(src, length) =>
	arg = PI / length
	a1 = exp(-arg)
	b1 = 2 * a1 * cos(1.738 * arg)
	c1 = pow(a1, 2)

	coef2 = b1 + c1
	coef3 = -(c1 + b1 * c1)
	coef4 = pow(c1, 2)
	coef1 = 1 - coef2 - coef3 - coef4

	ssf = 0.0
	ssf := coef1 * src + coef2 * nz(ssf[1]) + coef3 * nz(ssf[2]) + coef4 * nz(ssf[3])

zeros = src - nz(src[2])

// Ehlers Super Smoother Filter
essf = numberOfPoles == 2
	 ? twoPoleSuperSmootherFilter((zeros + zeros[1]) / 2, ssfLength)
	 : threePoleSuperSmootherFilter((zeros + zeros[1]) / 2, ssfLength)

selectedStdev = stdevInput == "Sample"
	 ? sampleStdev(essf, length)
	 : stdev(essf, length)

// Rescale filter in terms of Standard Deviations
scaledFilter = 0.0
scaledFilter := selectedStdev != 0
	 ? essf / selectedStdev
	 : nz(scaledFilter[1])

// Apply Fisher Transform to establish real Gaussian Probability Distribution
efdso = 0.0
efdso := abs(scaledFilter) < 2
	 ? 0.5 * log((1 + scaledFilter / 2) / (1 - scaledFilter / 2))
	 : nz(efdso[1])

efdsoColor = efdso > overboughtLevel ? #0ebb23 : efdso < oversoldLevel ? #cc0000 : #674ea7
plot(efdso, title="EFDSO", linewidth=2, color=efdsoColor, transp=0)

hline(overboughtLevel, title="Overbought Level", linestyle=dotted, color=#e69138)
hline(0, title="Zero Level", linestyle=dotted, color=#989898)
hline(oversoldLevel, title="Oversold Level", linestyle=dotted, color=#e69138)
