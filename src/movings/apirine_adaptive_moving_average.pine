//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Adaptive Moving Average script may be freely distributed under the MIT license.
study("Adaptive Moving Average", shorttitle="AMA", overlay=true)

length = input(title="Length", type=integer, defval=14, minval=1)
fastLength = input(title="Fast MA Length", type=integer, defval=2, minval=1)
slowLength = input(title="Slow MA Length", type=integer, defval=30, minval=1)
showKAMA = input(title="Show KAMA ?", type=bool, defval=true)
src = input(title="Source", type=source, defval=close)

kama(src, length, fastLength, slowLength) =>
	change = abs(nz(src[1]) - nz(src[length]))
	volatility = sum(abs(src - nz(src[1])), length)

	// Efficiency Ratio
	ER = iff(volatility != 0, change / volatility, 0)

	fastSC = 2 / (fastLength + 1)
	slowSC = 2 / (slowLength + 1)

	// Smoothing constant
	SC = pow((ER * (fastSC - slowSC)) + slowSC, 2)

	kama = 0.0
	kama := SC * src + (1 - SC) * nz(kama[1])

ama(src, length, fastLength, slowLength) =>
	pds = length + 1
	fastSC = 2 / (fastLength + 1)
	slowSC = 2 / (slowLength + 1)

	MLTP = abs((src - lowest(low, pds)) - (highest(high, pds) - src)) / (highest(high, pds) - lowest(low, pds))

	SSC = MLTP * (fastSC - slowSC) + slowSC

	ama = 0.0
	ama := nz(ama[1]) + (SSC * SSC) * (src - nz(ama[1]))

plot(showKAMA ? kama(src, length, fastLength, slowLength) : na, title="KAMA", linewidth=2, color=#e69138, transp=0)
plot(ama(src, length, fastLength, slowLength), title="AMA", linewidth=2, color=#741b47, transp=0)
