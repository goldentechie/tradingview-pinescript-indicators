//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Hampel Filter script may be freely distributed under the MIT license.
study("Hampel Filter", shorttitle="HF", overlay=true)

length = input(title="Length", type=integer, minval=1, defval=14)
scalingFactor = input(title="Scaling Factor", type=float, step=0.1, defval=3)
src = input(title="Source", type=source, defval=close)

median(src, length) =>
	percentile_nearest_rank(src, length, 50)

getHF(src, length, scalingFactor) =>
	sampleMedian = median(src, length)

	// Median Absolute Deviation
	mad = median(abs(src - sampleMedian), length)

	hf = abs(src - sampleMedian) <= scalingFactor * mad ? src : sampleMedian
	hf

hf = getHF(src, length, scalingFactor)

// Calculate EMA of the filtered samples
alpha = 2 / (length + 1)
ema = 0.0
ema := alpha * hf + (1 - alpha) * nz(ema[1])

plot(ema, title="HF", linewidth=2, color=#6d1e7f, transp=0)
