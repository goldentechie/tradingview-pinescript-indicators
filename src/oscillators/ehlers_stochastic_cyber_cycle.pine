//@version=3
// Copyright (c) 2018-present, Alex Orekhov (everget)
// Ehlers Stochastic Cyber Cycle script may be freely distributed under the MIT license.
study("Ehlers Stochastic Cyber Cycle", shorttitle="ESCC")

length = input(title="Length", type=integer, defval=14, minval=1)
alpha = input(title="Alpha", type=float, defval=0.7, step=0.1)
applyFilling = input(title="Apply Filling ?", type=bool, defval=false)
src = input(title="Source", type=source, defval=close)

smooth = (src + 2 * nz(src[1]) + 2 * nz(src[2]) + nz(src[3])) / 6

cycle = 0.0
cycle := pow(1 - alpha / 2, 2) * (smooth - 2 * nz(smooth[1]) + nz(smooth[2])) + 2 * (1 - alpha) * nz(cycle[1]) - pow(1 - alpha, 2) * nz(cycle[2])

maxCycle = highest(cycle, length)
minCycle = lowest(cycle, length)

stoch = (cycle - minCycle) / (maxCycle - minCycle)

escc = 2 * ((4 * stoch + 3 * nz(stoch[1]) + 2 * nz(stoch[2]) + nz(stoch[3])) / 10 - 0.5)
esccPrev = 0.96 * (escc[1] + 0.02)

esccPlot = plot(escc, title="ESCC", color=#3d85c6, transp=0)
esccPrevPlot = plot(esccPrev, title="Trigger", color=#ff3e7d, transp=0)

hline(0, title="Zero Level", linestyle=dotted)

fillColor = applyFilling ? (escc > esccPrev ? #0ebb23 : #cc0000) : color(white, 100)
fill(esccPlot, esccPrevPlot, color=fillColor, transp=0)
